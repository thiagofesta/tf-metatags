/**
 * Angular module for providing MetaTags support based on routes.
 * @version v0.4.2-dev-2015-09-26
 * @link https://github.com/thiagofesta/tf-metatags
 * @author Thiago Festa <thiagofesta@gmail.com> (http://thiagofesta.com)
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
!function(){"use strict";function a(){function a(a){k=a}function b(){return k}function c(a){l=a}function d(){return l}function e(a){m=a}function f(){return m}function g(a,b){n[a]=b}function h(a){return a?n[a]:n}function i(a,b,c,d){function e(){function b(){c(j.update)}a.$on("$stateChangeSuccess",b)}function f(a){var b;return k.properties&&(b=angular.extend({},k.properties,a.properties)),a=angular.extend({},k,a),b&&(a.properties=b),a}function g(a){var b=l+(a.title||"")+m;b&&(a.title=b)}function h(a){function b(a){angular.forEach(a,function(b,c){b||delete a[c]})}b(a),b(a.properties)}function i(a){function b(a){angular.forEach(a,function(b,c){angular.isObject(b)||(a[c]=o(b))})}b(a),b(a.properties)}function o(a){var c,e=angular.injector();return c=angular.isFunction(a)?e.invoke(a,j,b.$current.locals.globals):d(a)(b.$current.locals.globals)}function p(){"function"==typeof n.beforeChange&&n.beforeChange();var c=f(b.current.tfMetaTags||{});h(c),i(c),g(c),j.current=c,a.tfMetaTags=j.current,"function"==typeof n.afterChange&&n.afterChange()}return j.current={},j.update=p,j.initialize=e,j}var j=this,k={},l="",m="",n={};j.setDefaults=a,j.getDefaults=b,j.setTitlePrefix=c,j.getTitlePrefix=d,j.setTitleSuffix=e,j.getTitleSuffix=f,j.addCallback=g,j.getCallback=h,j.$get=i,i.$inject=["$rootScope","$state","$timeout","$interpolate"]}function b(a){a.initialize()}angular.module("tf.metatags",["ui.router"]).provider("tfMetaTags",a).run(b),b.$inject=["tfMetaTags"]}();