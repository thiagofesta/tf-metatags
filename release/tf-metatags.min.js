/**
 * Angular module for providing MetaTags support based on routes.
 * @version v0.4.0-dev-2015-09-14
 * @link https://github.com/thiagofesta/tf-metatags
 * @author Thiago Festa <thiagofesta@gmail.com> (http://thiagofesta.com)
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
!function(){"use strict";function a(){function a(a){o=a}function b(){return o}function c(a){p=a}function d(){return p}function e(a){q=a}function f(){return q}function g(a,b){r[a]=b}function h(a){return a?r[a]:r}function i(a){var b;return o.properties&&(b=angular.extend({},o.properties,a.properties)),a=angular.extend({},o,a),b&&(a.properties=b),a}function j(a){var b=p+(a.title||"")+q;b&&(a.title=b)}function k(a){function b(a){angular.forEach(a,function(b,c){b||delete a[c]})}b(a),b(a.properties)}function l(a){function b(a){angular.forEach(a,function(b,c){angular.isFunction(b)&&(a[c]=b())})}b(a),b(a.properties)}function m(a,b,c){function d(){"function"==typeof r.beforeChange&&r.beforeChange();var c=i(b.current.tfMetaTags||{});k(c),l(c),j(c),n.current=c,a.tfMetaTags=n.current,"function"==typeof r.afterChange&&r.afterChange()}function e(){function b(){c(n.update)}a.$on("$stateChangeSuccess",b)}return n.update=d,n.initialize=e,n}var n=this,o={},p="",q="",r={};n.setDefaults=a,n.getDefaults=b,n.setTitlePrefix=c,n.getTitlePrefix=d,n.setTitleSuffix=e,n.getTitleSuffix=f,n.addCallback=g,n.getCallback=h,n.current={},n.$get=m,m.$inject=["$rootScope","$state","$timeout"]}function b(a){a.initialize()}angular.module("tf.metatags",[]).provider("tfMetaTags",a).run(b),b.$inject=["tfMetaTags"]}();